
<testdefinition version="0.1">

<!-- Test suite, name mandatory - the same as test package name -->
  <!-- Schema: https://projects.maemo.org/docs/testing/xml-definition.html -->
  <suite name="applifed-functioanl-tests" domain="Application framework"> 

    <!-- At least one set per suite, name and description mandatory -->
    <set name="Installation-tests" description="Installation-ok tests" feature="AF Application prestarting functionality (basic)" requirement="3O0105">   

      <!-- Possibly some pre-steps to execute before running the test cases -->
      <pre_steps>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
          <step>/usr/share/applifed-testscripts/cp-service.rb</step>
      </pre_steps>

      <!-- At least one case per set, name mandatory, description mandatory, other optional -->
      <!-- At least one step per test, expected_result optional - tells which return code is considered passed -->

      <case name="applifed2" type="Functional" description="Check that exactly one applifed is running" timeout="360" level="System">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/tc_applifed_one_instance.rb</step>
      </case>

      <case name="applifed-daemonized" type="Functional" description="Check that fork parameter works" timeout="120" level="System">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/tc_daemonize.rb --name test_daemonize</step>
      </case>

      <case name="applifed-fork_single_instance" type="Functional" description="Check that one instance of applifed is running when forked several times" timeout="120" level="System">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/tc_daemonize.rb --name test_fork_one_instance</step>
      </case>
      <!-- Environments optional - tells where the tests are run -->
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
   
    </set>

    <set name="Applifed-TDriver-Tests" description="Functional tests for applifed with TDriver tool" feature="AF Application prestarting functionality (basic)" requirement="3O0105">   
      <pre_steps>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="Kill-Re-Prestart" type="Functional" description="To test that the application is re-prestarted by applifed after they are killed" timeout="360" level="System">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/ts_prestart.rb --name test_kill_re_prestart</step>
      </case>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>

      <!--get>
          <file> /tmp/applifed-test.log</file>
      </get-->
    </set>

    <set name="CPU_LOAD_TESTS" description="Functional tests for applifed for cpu load prestarting" feature="AF Application pre-starting enhancements" requirement="3O0137">   
      <pre_steps>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="LOW_CPULOAD" type="Functional" description="Test that a applications are prestarted when the cpu load is lower than threshold value" timeout="360" level="System">
	      <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/cpu_load/tc_cpu_load.rb --name test_cpu_load_low</step>
      </case>
      <case name="HIGH_CPULOAD" type="Functional" description="Test that applications are not prestarted when the cpu load is higher than threshold value" timeout="360" level="System">
	      <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 /usr/share/applifed-testscripts/cpu_load/tc_cpu_load.rb --name test_cpu_load_high</step>
      </case>
      
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>

      <get>
          <file>/tmp/cpuload_low.log</file>
          <file> /tmp/cpuload_high.log</file>
      </get>
    </set>


  </suite>
</testdefinition>


